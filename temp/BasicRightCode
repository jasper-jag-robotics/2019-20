package org.firstinspires.ftc.teamcode;


import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.util.ElapsedTime;
import com.qualcomm.robotcore.util.Range;

@Autonomous(name="BackupAuto")
//@Disabled
public class BackupAuto extends LinearOpMode {

    // declare motors
    public DcMotor frontLeft;
    public DcMotor frontRight;
    public DcMotor backLeft;
    public DcMotor backRight;

    // declare objects
    ElapsedTime timer = new ElapsedTime();

    @Override
    public void runOpMode(){
        // hardware mapping
        frontLeft = hardwareMap.get(DcMotor.class, "Front_Left");
        frontRight = hardwareMap.get(DcMotor.class, "Front_Right");
        backLeft = hardwareMap.get(DcMotor.class, "Back_Left");
        backRight = hardwareMap.get(DcMotor.class, "Back_Right");

        // set motor directions
        frontRight.setDirection(DcMotor.Direction.REVERSE);
        backRight.setDirection(DcMotor.Direction.FORWARD);
        frontLeft.setDirection(DcMotor.Direction.REVERSE);
        backRight.setDirection(DcMotor.Direction.FORWARD);
        
        telemetry.addData("Ready","Start it");
        telemetry.update();
        
        waitForStart();
        timer.reset();

        while (opModeIsActive()){
            
            // wait 25 seconds
            while (timer.seconds() < 28) {
                telemetry.addLine("Waiting...");
                telemetry.update();
            }
            
            // after 25 seconds, drive straight for 3 sec
            movement(0.4,100);
        }
    }


    // function to give forward and backwards movement for a certain time
    public void movement(double forward,long milli) {
        frontLeft.setPower(forward);
        frontRight.setPower(forward);
        backLeft.setPower(forward);
        backRight.setPower(forward);
        sleep(milli);
    }
    
}

